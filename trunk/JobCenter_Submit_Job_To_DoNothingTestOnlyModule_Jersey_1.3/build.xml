<?xml version="1.0" encoding="US-ASCII" ?>
<project name="JobCenter_DoNothingTestModuleMain" default="create_run_jar" basedir=".">

	<target name="init">
		<tstamp />

		<!-- name of jar or whatever that is copied to deploy -->
		<property name="deployablename" value="jobcenter_Submit_Job_To_DoNothingTestModule.jar" />

		<!-- Set property:value maps -->
		<property name="src" value="src" />
		<property name="build" value="build" />
		<property name="classes" value="classes" />
		<property name="deploy" value="deploy" />
		<property name="config" value="resources" />
		<property name="runDir" value="." />
		<property name="local" value="local" />
		<property name="remote" value="remote" />
		<property name="lib" value="lib" />

	</target>

	<!-- Clean up the previous build -->
	<target name="clean" depends="init">
		<delete dir="${classes}" />
		<delete dir="${deploy}" />
	</target>

	<!-- Make new directories for new build -->
	<target name="prepare" depends="clean">
		<mkdir dir="${classes}" />
		<mkdir dir="${deploy}" />
	</target>

	<!-- Start new compilation -->
	<target name="compile" depends="prepare">

		<!-- Compile classes -->
		<javac srcdir="${src}" destdir="${classes}" debug="true">
			<classpath refid="classpath" />
		</javac>

		<!-- Copy resources to the classes directory -->
		<copy todir="${classes}">
			<fileset dir="${config}" />
		</copy>

		<!-- Copy any resources from source (not .java) to the classes directory -->
		<copy todir="${classes}">
			<fileset dir="${src}">
				<exclude name="**/*.java" />
			</fileset>
		</copy>

	</target>

    <target name="create_run_jar" depends="compile">


		<!-- Make the jar file -->

        <jar destfile="${deploy}/${deployablename}">
            <manifest>
                <attribute name="Main-Class" value="org.eclipse.jdt.internal.jarinjarloader.JarRsrcLoader"/>
                <attribute name="Rsrc-Main-Class" value="org.jobcenter.main.JobCenter_Submit_Job_To_DoNothingTestOnlyModule"/>
                <attribute name="Class-Path" value="."/>
                <attribute name="Rsrc-Class-Path" value="./ apache-log4j-extras-1.0.jar jackson-core-asl-1.1.1.jar jaxb-api-2.1.jar jaxb-impl-2.1.12.jar jersey-bundle-1.3.jar jettison-1.1.jar jsr311-api-1.1.1.jar log4j-1.2.15.jar mail.jar asm-3.3.jar jackson-core-asl-1.1.1.jar jaxb-api-2.1.jar jaxb-impl-2.1.12.jar jersey-bundle-1.3.jar jettison-1.1.jar jsr311-api-1.1.1.jar stax-api-1.0-2.jar asm-3.3.jar apache-log4j-extras-1.0.jar log4j-1.2.15.jar mail.jar jobcenter_base.jar jobcenter_jobsubmission_client.jar jobcenter_jobsubmissionclient_interface.jar"/>
            </manifest>
            <zipfileset src="jar-in-jar-loader.zip"/>
            <fileset dir="${classes}"/>
        	<zipfileset dir="lib" includes="*" />
            <zipfileset dir="../generated_jars" includes="jobcenter_base.jar"/>
            <zipfileset dir="../generated_jars" includes="jobcenter_jobsubmission_client.jar"/>
            <zipfileset dir="../generated_jars" includes="jobcenter_jobsubmissionclient_interface.jar"/>

        </jar>

		<!-- Copy the new jar to the generated_jars directory -->
		<copy file="${deploy}/${deployablename}" todir="../generated_jars/" />

    </target>



	<!-- Set the classpath to include generated jars and anything in the lib directory -->
	<path id="classpath">
		<fileset dir="../generated_jars/">
			<include name="*.jar" />
		</fileset>
		<fileset dir="lib">
			<include name="**/*.jar" />
		</fileset>
	</path>

</project>