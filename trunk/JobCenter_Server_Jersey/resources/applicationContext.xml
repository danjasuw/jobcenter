<?xml version="1.0" encoding="UTF-8"?>

<!--   Define the instances of classes loaded by Spring  -->

  <!-- Important:  All beans are Singletons by default, if the "scope" is not specified.   -->


<beans xmlns="http://www.springframework.org/schema/beans"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:aop="http://www.springframework.org/schema/aop"
     xmlns:tx="http://www.springframework.org/schema/tx"
     xsi:schemaLocation="
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">



	<!--   sessionFactory using hbm.xml files -->

	<!-- This "id" must match ServerJerseyConstants.SESSION_FACTORY_ID_IN_SPRING_CONTEXT -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLInnoDBDialect
				</prop>

				  <!--  key="hibernate.show_sql" false or true, if true writes sql statements to System.out -->
				<prop key="hibernate.show_sql">
					false
				</prop>
<!--
				<prop key="hibernate.show_sql">
					true
				</prop>
-->
			</props>
		</property>
		<property name="mappingResources">
			<list>
				<value>org/jobcenter/dto/Job.hbm.xml</value>
				<value>org/jobcenter/dto/JobType.hbm.xml</value>
				<value>org/jobcenter/dto/Status.hbm.xml</value>
				<value>org/jobcenter/dto/RunMsgType.hbm.xml</value>
				<value>org/jobcenter/dto/Run.hbm.xml</value>
				<value>org/jobcenter/dto/RunMsg.hbm.xml</value>
				<value>org/jobcenter/dto/Node.hbm.xml</value>
				<value>org/jobcenter/dto/RequestType.hbm.xml</value>
				<value>org/jobcenter/dto/Request.hbm.xml</value>
				<value>/org/jobcenter/dto/NodeClientStatusDTO.hbm.xml</value>
				<value>org/jobcenter/dto/NodeAccessRule.hbm.xml</value>

				<value>org/jobcenter/dtoserver/ConfigSystem.hbm.xml</value>

<!--

				<value>org/jobcenter/dto/JobParameter.hbm.xml</value>
-->
			</list>
		</property>
	</bean>


<!--   Annotation based sessionFactory

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">

	  <property name="dataSource">
	     <ref bean="dataSource"/>
	  </property>
	  <property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.MySQLInnoDBDialect
				</prop>
				<prop key="hibernate.show_sql">
					false
				</prop>
			</props>
	  </property>

	  <property name="packagesToScan">
	     <list>
	       <value>org.jobcenter.dto</value>
	     </list>
	  </property>

	</bean>
 -->

 				<!--  key="hibernate.show_sql" false or true -->

			 <!--  name="packagesToScan"  is the   annotatedPackages  -->

				<!-- org.hibernate.dialect.MySQLMyISAMDialect  or   org.hibernate.dialect.MySQLMyISAMDialect,  was org.hibernate.dialect.MySQLMyISAMDialect -->


		  <!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA, no JTA in Tomcat) -->

	<bean id="transactionManager"
         class="org.springframework.orm.hibernate3.HibernateTransactionManager">
 	 <property name="sessionFactory">
 	   <ref local="sessionFactory"/>
 	 </property>
 	</bean>


  <!-- read http://static.springsource.org/spring/docs/2.5.x/reference/transaction.html
  		for parameters.
     for < tx:annotation-driven >
  		 parameter transaction-manager defaults to "transactionManager"


  wraps @Transactional beans in a proxy to automatically
    correctly invoke the "transactionManager" bean above, or
    others as specified in their annotations. -->

  <tx:annotation-driven transaction-manager="transactionManager"  proxy-target-class="true"/>  <!--  proxy-target-class="true" Added proxy-target-class="true" per comment in URL https://jira.springframework.org/browse/SPR-5082 -->



  <!-- Important:  All beans are Singletons by default, if the "scope" is not specified.   -->


	<bean id="SendClientsCheckinLateNotificationServiceForWebInitiation" class="org.jobcenter.service.SendClientsCheckinLateNotificationServiceForWebInitiationImpl">
		<property name="processClientsStatusForLateCheckinsService">
			<ref bean="processClientsStatusForLateCheckinsService" />
		</property>
	</bean>


	<bean id="GetClientsFailedToConnectTrackingService" class="org.jobcenter.service.GetClientsFailedToConnectTrackingServiceImpl">
		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="clientsFailedToConnectTrackingService">
			<ref bean="clientsFailedToConnectTrackingService" />
		</property>
	</bean>


	<bean id="GetClientsUsingSameNodeNameService" class="org.jobcenter.service.GetClientsUsingSameNodeNameServiceImpl">
		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="clientsConnectedTrackingService">
			<ref bean="clientsConnectedTrackingService" />
		</property>
	</bean>


	<bean id="GetClientsConnectedListService" class="org.jobcenter.service.GetClientsConnectedListServiceImpl">
		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="clientsConnectedTrackingService">
			<ref bean="clientsConnectedTrackingService" />
		</property>
	</bean>

	<bean id="ClientStartupService" class="org.jobcenter.service.ClientStartupServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>
		<property name="clientStatusDBUpdateService">
			<ref bean="clientStatusDBUpdateService" />
		</property>
		<property name="clientsConnectedTrackingService">
			<ref bean="clientsConnectedTrackingService" />
		</property>
		
		<property name="sendEmailService">
			<ref bean="sendEmailService" />
		</property>
		<property name="getMailConfig">
			<ref bean="getMailConfig" />
		</property>
			

	</bean>

	<bean id="ClientStatusUpdateService" class="org.jobcenter.service.ClientStatusUpdateServiceImpl">



		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>
		<property name="clientStatusDBUpdateService">
			<ref bean="clientStatusDBUpdateService" />
		</property>

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="clientsConnectedTrackingService">
			<ref bean="clientsConnectedTrackingService" />
		</property>
		<property name="getMailConfig">
			<ref bean="getMailConfig" />
		</property>
		<property name="sendEmailService">
			<ref bean="sendEmailService" />
		</property>

	</bean>


	<bean id="GetNextJobForClientService" class="org.jobcenter.service.GetNextJobForClientServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>


		<property name="getNextJobForClientJDBCDAO">
			<ref bean="getNextJobForClientJDBCDAO" />
		</property>
		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>

	<bean id="SubmitJobService" class="org.jobcenter.service.SubmitJobServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>


		<!-- Hibernate DAO -->

		<property name="jobTypeDAO">
			<ref bean="jobTypeDAO" />
		</property>

		<property name="requestTypeDAO">
			<ref bean="requestTypeDAO" />
		</property>

	</bean>



	<bean id="JobChangePriorityService" class="org.jobcenter.service.JobChangePriorityServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
	</bean>

	<bean id="RequeueJobService" class="org.jobcenter.service.RequeueJobServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
		<property name="statusDAO">
			<ref bean="statusDAO" />
		</property>
	</bean>

	<bean id="CancelJobService" class="org.jobcenter.service.CancelJobServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
		<property name="statusDAO">
			<ref bean="statusDAO" />
		</property>
	</bean>



	<bean id="UpdateServerFromJobRunOnClientService" class="org.jobcenter.service.UpdateServerFromJobRunOnClientServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
		<property name="runDAO">
			<ref bean="runDAO" />
		</property>
		<property name="statusDAO">
			<ref bean="statusDAO" />
		</property>

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>




	<bean id="GetRunService" class="org.jobcenter.service.GetRunServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="runDAO">
			<ref bean="runDAO" />
		</property>

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>

	<bean id="GetRunIdListService" class="org.jobcenter.service.GetRunIdListServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>




	<bean id="GetJobListService" class="org.jobcenter.service.GetJobListServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>

		<!-- JDBC DAO -->

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>

	<bean id="GetRequestListService" class="org.jobcenter.service.GetRequestListServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
		<property name="requestDAO">
			<ref bean="requestDAO" />
		</property>

		<!-- JDBC DAO -->
		<property name="requestJDBCDAO">
			<ref bean="requestJDBCDAO" />
		</property>
		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>


	<bean id="GetJobForGUIService" class="org.jobcenter.service.GetJobForGUIServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>
		<property name="runDAO">
			<ref bean="runDAO" />
		</property>

		<!-- JDBC DAO -->

		<property name="jobJDBCDAO">
			<ref bean="jobJDBCDAO" />
		</property>
	</bean>


	<bean id="GetJobTypesService" class="org.jobcenter.service.GetJobTypesServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="jobTypeDAO">
			<ref bean="jobTypeDAO" />
		</property>

	</bean>

	<bean id="GetRequestTypesService" class="org.jobcenter.service.GetRequestTypesServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="requestTypeDAO">
			<ref bean="requestTypeDAO" />
		</property>


	</bean>


	<bean id="GetClientsStatusListService" class="org.jobcenter.service.GetClientsStatusListServiceImpl">

		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>

		<!-- Hibernate DAO -->

		<property name="nodeClientStatusDAO">
			<ref bean="nodeClientStatusDAO" />
		</property>
		<property name="runDAO">
			<ref bean="runDAO" />
		</property>
		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>

	</bean>



<!-- ================================== -->


<!--   Internal Scheduler Services -->

	<bean id="sendClientStatusEmailDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="clientsStatusRetrieveAndSendEmailService" />
		<property name="targetMethod" value="sendClientsStatusNotification" />
		<property name="concurrent" value="false" />
	</bean>

	<bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="sendClientStatusEmailDetail" />

		<!-- run every morning at 6 AM -->
<!--  		
-->
		<property name="cronExpression" value="0 0 6 * * ?" />

		<!-- Testing, set at current time for run now -->
		
<!--  		
		<property name="cronExpression" value="0 40 18 * * ?" />
-->
		
	</bean>
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    	<property name="triggers">
        	<list>
            	<ref bean="cronTrigger" />
        	</list>
    	</property>
	</bean>

<!-- ================================== -->


<!--   Internal Timer Services -->




	<bean id="sendClientsCheckinLateNotificationTimerTask" class="org.jobcenter.springtimertasks.SendClientsCheckinLateNotificationTimerTaskImpl">
	    <property name="processClientsStatusForLateCheckinsService">
			<ref bean="processClientsStatusForLateCheckinsService" />
	    </property>
	</bean>

	<bean id="scheduledTaskSendClientsCheckinLateNotification" class="org.springframework.scheduling.timer.ScheduledTimerTask">

	    <property name="timerTask" ref="sendClientsCheckinLateNotificationTimerTask" />

	    <!--
	    	For Testing:

	         delay:  wait 1 second before starting repeated execution
	    	 period: run every 5 seconds
	    -->
<!--
	    <property name="delay" value="1000" />
	    <property name="period" value="5000" />
-->

	    <!-- delay:  wait 20 minutes before starting repeated execution
	    	 period: run every 10 minutes
	    -->
<!--
-->
	    <property name="delay" value="1200000" />
	    <property name="period" value="600000" />

	</bean>


	<!-- Actually launch the timer task with the TimerFactoryBean -->

	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean">
	  <property name="scheduledTimerTasks">
	    <list>
	      <ref bean="scheduledTaskSendClientsCheckinLateNotification"/>
	    </list>
	  </property>
	</bean>



	<!-- ================================== -->


<!--   Internal services -->

	<bean id="clientsStatusRetrieveAndSendEmailService" class="org.jobcenter.internalservice.ClientsStatusRetrieveAndSendEmailServiceImpl">

		<property name="getClientsStatusListService">
			<ref bean="GetClientsStatusListService" />
		</property>
		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>
		<property name="getMailConfig">
			<ref bean="getMailConfig" />
		</property>
		<property name="sendEmailService">
			<ref bean="sendEmailService" />
		</property>
		<property name="runDAO">
			<ref bean="runDAO" />
		</property>
		<property name="jobDAO">
			<ref bean="jobDAO" />
		</property>

		<property name="nodeClientStatusDAO">
			<ref bean="nodeClientStatusDAO" />
		</property>
	</bean>


	<bean id="clientStatusDBUpdateService" class="org.jobcenter.internalservice.ClientStatusDBUpdateServiceImpl">
		<property name="clientNodeNameCheck">
			<ref bean="clientNodeNameCheck" />
		</property>
		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>

		<property name="nodeClientStatusDAO">
			<ref bean="nodeClientStatusDAO" />
		</property>
	</bean>



	<bean id="getMailConfig" class="org.jobcenter.internalservice.GetMailConfigImpl">
		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>
	</bean>


	<bean id="getValueFromConfigService" class="org.jobcenter.internalservice.GetValueFromConfigServiceImpl">
		<property name="configSystemDAO">
			<ref bean="configSystemDAO" />
		</property>
	</bean>



	<bean id="clientNodeNameCheck" class="org.jobcenter.internalservice.ClientNodeNameCheckImpl">

		<property name="nodeDAO">
			<ref bean="nodeDAO" />
		</property>

		<property name="clientsFailedToConnectTrackingService">
			<ref bean="clientsFailedToConnectTrackingService" />
		</property>
	</bean>



	<bean id="clientsConnectedTrackingService" class="org.jobcenter.internalservice.ClientsConnectedTrackingServiceImpl">
	</bean>


	<bean id="clientsFailedToConnectTrackingService" class="org.jobcenter.internalservice.ClientsFailedToConnectTrackingServiceImpl">
	</bean>


	<bean id="setUpHibernateSessionForNonWebRequestProcessing" class="org.jobcenter.internalservice.SetUpHibernateSessionForNonWebRequestProcessingImpl">
	</bean>


	<bean id="processClientsStatusForLateCheckinsService" class="org.jobcenter.internalservice.ProcessClientsStatusForLateCheckinsServiceImpl">

		<property name="clientStatusDBUpdateService">
			<ref bean="clientStatusDBUpdateService" />
		</property>

		<property name="clientsLateCheckinRetrieveAndSendEmailService">
			<ref bean="clientsLateCheckinRetrieveAndSendEmailService" />
		</property>

		<property name="nodeClientStatusDAO">
			<ref bean="nodeClientStatusDAO" />
		</property>
	</bean>


	<bean id="clientsLateCheckinRetrieveAndSendEmailService" class="org.jobcenter.internalservice.ClientsLateCheckinRetrieveAndSendEmailServiceImpl">

		<property name="getClientsStatusListService">
			<ref bean="GetClientsStatusListService" />
		</property>

		<property name="getValueFromConfigService">
			<ref bean="getValueFromConfigService" />
		</property>

		<property name="sendEmailService">
			<ref bean="sendEmailService" />
		</property>
		<property name="getMailConfig">
			<ref bean="getMailConfig" />
		</property>
		
		
	</bean>

	<bean id="sendEmailService" class="org.jobcenter.internalservice.SendEmailServiceImpl">
	</bean>



	<!-- ================================== -->

	<!--  JDBC based DAO objects -->

	<bean id="jobJDBCDAO"
	    class="org.jobcenter.jdbc.JobJDBCDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>


	<bean id="requestJDBCDAO"
	    class="org.jobcenter.jdbc.RequestJDBCDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>


	<bean id="getNextJobForClientJDBCDAO"
		class="org.jobcenter.jdbc.GetNextJobForClientJDBCDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="jobTypeJDBCDAO"
		class="org.jobcenter.jdbc.JobTypeJDBCDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>
	<bean id="requestTypeJDBCDAO"
		class="org.jobcenter.jdbc.RequestTypeJDBCDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<!-- Spring based Hibernate DAO -->


	<bean id="jobDAO" class="org.jobcenter.dao.JobDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="runDAO" class="org.jobcenter.dao.RunDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="statusDAO" class="org.jobcenter.dao.StatusDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="jobTypeDAO" class="org.jobcenter.dao.JobTypeDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="requestDAO" class="org.jobcenter.dao.RequestDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="requestTypeDAO" class="org.jobcenter.dao.RequestTypeDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>



	<bean id="nodeDAO" class="org.jobcenter.dao.NodeDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>


	<bean id="nodeClientStatusDAO" class="org.jobcenter.dao.NodeClientStatusDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>

	<bean id="configSystemDAO" class="org.jobcenter.dao.ConfigSystemDAOImpl">
		<property name="sessionFactory">
			<ref bean="sessionFactory" />
		</property>
	</bean>



</beans>